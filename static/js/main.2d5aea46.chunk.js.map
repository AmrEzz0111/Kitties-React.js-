{"version":3,"sources":["components/card/card.jsx","components/card_list/card_list.jsx","components/search-box/search_box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","kitty","id","alt","width","height","style","margin","name","email","CardList","kitties","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","res","json","users","setState","this","filteredKitties","filter","toLowerCase","startsWith","toLocaleLowerCase","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sTAIaA,EAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,MAAMC,GAAtC,aACHC,IAAI,QACJC,MAAM,MACNC,OAAO,MACPC,MAAO,CAAEC,OAAQ,YAEnB,6BAAKT,EAAMG,MAAMO,OACjB,4BAAIV,EAAMG,MAAMQ,YCVPC,G,MAAW,SAACZ,GAAD,OACtB,qBAAKC,UAAU,YAAf,SACGD,EAAMa,QAAQC,KAAI,SAACX,GAAD,OACjB,cAAC,EAAD,CAAqBA,MAAOA,GAAjBA,EAAMC,WCHVW,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACvB,uBACEhB,UAAU,SACViB,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC6BCG,E,kDAhCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXR,QAAS,GACTS,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAEf,QAASc,S,oBAG9C,WAAU,IAAD,OACP,EAAiCE,KAAKR,MAA9BR,EAAR,EAAQA,QAASS,EAAjB,EAAiBA,YACXQ,EAAkBjB,EAAQkB,QAAO,SAAC5B,GAAD,OACrCA,EAAMO,KAAKsB,cAAcC,WAAWX,EAAYY,wBAElD,OACE,sBAAKjC,UAAU,MAAf,UACE,yCACA,cAAC,EAAD,CACEe,YAAY,iBACZC,aAAc,SAACkB,GAAD,OAAO,EAAKP,SAAS,CAAEN,YAAaa,EAAEC,OAAOC,WAE7D,cAAC,EAAD,CAAUxB,QAASiB,EAAiBR,YAAaA,W,GA5BvCgB,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2d5aea46.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./card.styles.css\";\nimport \"bootstrap\";\n\nexport const Card = (props) => (\n  <div className=\"card-container\">\n    <img\n      src={`https://robohash.org/${props.kitty.id}?set=set4`}\n      alt=\"kitty\"\n      width=\"180\"\n      height=\"180\"\n      style={{ margin: \"0 auto\" }}\n    />\n    <h2>{props.kitty.name}</h2>\n    <p>{props.kitty.email}</p>\n  </div>\n);\n","import React, { Component } from \"react\";\nimport { Card } from \"../card/card\";\nimport \"./card-list.styles.css\";\n\nexport const CardList = (props) => (\n  <div className=\"card-list\">\n    {props.kitties.map((kitty) => (\n      <Card key={kitty.id} kitty={kitty} />\n    ))}\n  </div>\n);\n","import React from \"react\";\n\nimport \"./searchbox.styles.css\";\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n  <input\n    className=\"search\"\n    type=\"search\"\n    placeholder={placeholder}\n    onChange={handleChange}\n  />\n);\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport { CardList } from \"./components/card_list/card_list\";\nimport { SearchBox } from \"./components/search-box/search_box\";\nimport \"bootstrap\";\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      kitties: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((users) => this.setState({ kitties: users }));\n  }\n\n  render() {\n    const { kitties, searchField } = this.state;\n    const filteredKitties = kitties.filter((kitty) =>\n      kitty.name.toLowerCase().startsWith(searchField.toLocaleLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Kitties</h1>\n        <SearchBox\n          placeholder=\"search kitties\"\n          handleChange={(e) => this.setState({ searchField: e.target.value })}\n        />\n        <CardList kitties={filteredKitties} searchField={searchField} />\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}